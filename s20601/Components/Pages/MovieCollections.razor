@page "/movie-collections/{userNickname}"

@using s20601.Data.Models
@using s20601.Services

@inject IMovieCollectionService MovieCollectionSvc
@inject IUserService UserSvc

<AuthorizeView>
    <MudTabs Elevation="2" Rounded="true" ApplyEffectsToContainer="true" PanelClass="pa-6">
        <MudTabPanel Text="My collections">

            @if (userMovieCollections is null)
            {
                <MudProgressCircular Color="Color.Default" Indeterminate="true" />
            }
            else
            {
                foreach (var collection in userMovieCollections)
                {
                    <ObjectCard ImageHeight="300" ImageWidth="280" Title="@collection.Name" Subtitle="@collection.Description" />
                }
            }
        </MudTabPanel>
        <MudTabPanel Text="Shared Collections">
            <MudText>Content Two</MudText>
        </MudTabPanel>
        <MudTabPanel Text="Community collections">
            <MudText>Content Two</MudText>
        </MudTabPanel>
    </MudTabs>
</AuthorizeView>

@code
{
    [CascadingParameter]
    public Task<AuthenticationState> AuthenticationStateTask { get; set; } = null!;
    private string userId = null!;
    
    [Parameter]
    public required string userNickname { get; set; }

    private List<MovieCollection> userMovieCollections = null!;

    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthenticationStateTask;
        var user = authState.User;
        if (user.Identity?.IsAuthenticated == true)
        {
            userId = authState.User.Claims.First().Value;
            userMovieCollections = await MovieCollectionSvc.GetUserMovieCollections(userId);
        }
    }

}